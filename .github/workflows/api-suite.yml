name: API Suite
on:
  push:
  pull_request:
concurrency:
  group: api-suite-${{ github.ref }}
  cancel-in-progress: true

jobs:
  api-suite:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    env:
      NODE_ENV: test
      NEXT_TELEMETRY_DISABLED: 1
      SQLITE_PATH: ${{ github.workspace }}/data/app.db
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Ensure data dir
        run: mkdir -p data

      - name: Install deps
        run: npm ci

      - name: Seed DB
        env:
          SQLITE_PATH: ./data/app.db
        run: node scripts/seed.cjs

      - name: Build (web + backend)
        run: npm run build

      - name: Start backend (:4000)
        env:
          NODE_ENV: production
          SQLITE_PATH: ./data/app.db
          PORT: 4000
        run: |
          node dist/server/index.js > backend.log 2>&1 & echo $! > backend.pid

      - name: Start BFF (:3000)
        env:
          NODE_ENV: production
        run: |
          npx next start -p 3000 > web.log 2>&1 & echo $! > web.pid

      - name: Wait for ports (max 180s)
        run: npx wait-on -t 180000 tcp:4000 http://localhost:3000/api/bff/ready

      - name: Run API suite
        env:
          SQLITE_PATH: ./data/app.db
        run: node scripts/run-api-suite.mjs

      - name: Print logs on failure
        if: failure()
        run: |
          echo '=== backend.log ==='; tail -n +1 backend.log || true
          echo '=== web.log ===';     tail -n +1 web.log || true

      - name: Stop servers
        if: always()
        run: |
          kill $(cat backend.pid) 2>/dev/null || true
          kill $(cat web.pid) 2>/dev/null || true

      - name: Upload logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: dev-logs
          path: |
            backend.log
            web.log
