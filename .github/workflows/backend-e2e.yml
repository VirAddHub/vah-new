name: Backend E2E Tests

on:
  push:
    branches: [main]
    paths:
      - 'apps/backend/**'
  pull_request:
    branches: [main]
    paths:
      - 'apps/backend/**'

jobs:
  e2e:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build backend
        run: npm run -w apps/backend build
        
      - name: Start test server
        env:
          PORT: 3001
          NODE_ENV: test
          POSTMARK_TOKEN: dummy
          EMAIL_FROM: hello@virtualaddresshub.co.uk
          EMAIL_FROM_NAME: VirtualAddressHub
          EMAIL_REPLY_TO: support@virtualaddresshub.co.uk
          APP_BASE_URL: http://localhost:3001
          DATABASE_URL: postgresql://test:test@localhost:5432/test # pragma: allowlist secret
          DB_CLIENT: pg
          DISABLE_SQLITE: true
        run: |
          node apps/backend/dist/server/index.js &
          echo $! > server.pid
          
      - name: Wait for server readiness
        run: |
          npx wait-on http://localhost:3001/api/healthz --timeout 30000
          
      - name: Run E2E tests
        run: |
          E2E_BASE_URL=http://localhost:3001 npm run -w apps/backend test:e2e
          
      - name: Stop test server
        if: always()
        run: |
          if [ -f server.pid ]; then
            kill $(cat server.pid) || true
            rm server.pid
          fi