name: Backend E2E Tests

on:
  push:
    branches: [main]
    paths:
      - 'apps/backend/**'
  pull_request:
    branches: [main]
    paths:
      - 'apps/backend/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  e2e:
    runs-on: ubuntu-latest
    timeout-minutes: 25

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: postgres # pragma: allowlist secret
        ports: ['5432:5432']
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=5s --health-timeout=5s --health-retries=20

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --include=dev
        working-directory: apps/backend

      - name: Build backend
        run: npm run build
        working-directory: apps/backend

      - name: Setup test database
        env:
          PGUSER: postgres
          PGPASSWORD: postgres # pragma: allowlist secret
          PGHOST: localhost
          PGPORT: 5432
          PGDATABASE: vah_test
        run: |
          # Create test user and database
          psql -c "CREATE ROLE test WITH LOGIN PASSWORD 'test';" || true
          psql -c "CREATE DATABASE test OWNER test;" || true

      - name: Start API server
        env:
          PGUSER: postgres
          PGPASSWORD: postgres # pragma: allowlist secret
          PGHOST: localhost
          PGPORT: 5432
          PGDATABASE: vah_test
          DATABASE_URL: postgres://${{ env.PGUSER }}:${{ env.PGPASSWORD }}@${{ env.PGHOST }}:${{ env.PGPORT }}/${{ env.PGDATABASE }} # pragma: allowlist secret
          PORT: 3001
          NODE_ENV: test
          APP_BASE_URL: http://localhost:3001
          EMAIL_FROM: hello@virtualaddresshub.co.uk
          EMAIL_FROM_NAME: VirtualAddressHub
          EMAIL_REPLY_TO: support@virtualaddresshub.co.uk
          POSTMARK_TOKEN: dummy
          DISABLE_RATE_LIMIT_FOR_HEALTHZ: 1
        run: |
          node dist/server/index.js &
          echo $! > server.pid
        working-directory: apps/backend

      - name: Wait for health
        env:
          SMOKE_BASE_URL: http://localhost:3001
          SMOKE_INITIAL_DELAY_SECONDS: 10
          SMOKE_MAX_WAIT_SECONDS: 600
        run: bash apps/backend/scripts/smoke.sh

      - name: Run E2E tests
        env:
          E2E_BASE_URL: http://localhost:3001
        run: npm run test:e2e
        working-directory: apps/backend

      - name: Stop server
        if: always()
        run: |
          if [ -f server.pid ]; then kill $(cat server.pid) || true; fi