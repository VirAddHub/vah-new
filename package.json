{
  "name": "word",
  "version": "1.0.0",
  "private": true,
  "description": "Next.js frontend (stable, prod-ready)",
  "scripts": {
    "//": "── DB lifecycle ───────────────────────────────────────────────",
    "migrate": "node scripts/migrate.cjs",
    "seed": "node scripts/seed.cjs",
    "db:prepare": "npm run migrate && npm run seed",
    "db:init": "node scripts/migrate-sqlite.cjs",
    "start:ci": "node server.js",
    "//2": "── Backend checks & tests ───────────────────────────────────────",
    "typecheck:backend": "tsc -p tsconfig.backend.json --noEmit",
    "test:backend": "npm run db:prepare && jest --config jest.backend.config.cjs",
    "//3": "── CI helpers (optional local use too) ──────────────────────────",
    "ci:prepare": "npm run db:prepare",
    "ci:build": "npm run db:prepare && npm run typecheck:backend",
    "ci:test": "npm run db:prepare && npm run typecheck:backend && jest --config jest.backend.config.cjs",
    "prebuild": "bash scripts/banlist.sh || true",
    "postinstall": "bash scripts/patch-native.sh",
    "clean": "rimraf dist .next",
    "build": "rm -rf dist && tsc -p tsconfig.server.json && npm run copy:server-files && node scripts/write-build-meta.cjs && node scripts/postbuild-shims.cjs",
    "build:backend": "npm run build",
    "prestart:backend": "node scripts/prestart.cjs",
    "copy:server-files": "mkdir -p dist/middleware dist/server && cp middleware/*.js dist/middleware/ 2>/dev/null || true && cp -r routes dist/ 2>/dev/null || true && cp -r routes dist/server/ 2>/dev/null || true && cp -r lib dist/ 2>/dev/null || true && cp server/*.js dist/server/ 2>/dev/null || true",
    "build:web": "next build",
    "predev": "node -e \"const fs=require('fs');const p=process.env.SQLITE_PATH||'./data/app.db';fs.mkdirSync(require('path').dirname(p),{recursive:true});\"",
    "dev": "concurrently \"npm:dev:backend\" \"npm:dev:web\"",
    "test:api": "node scripts/run-api-suite.mjs",
    "test:api:backend": "node scripts/run-api-suite.mjs --backend-only",
    "test:api:bff": "node scripts/run-api-suite.mjs --bff-only",
    "dev:wait": "node -e \"const f=async()=>{const u=fetch;const s=(x)=>u(x).then(r=>r.ok).catch(()=>false);let i=0;while(i++<60){const a=await s('http://localhost:4000/api/ready');const b=await s('http://localhost:3000/api/bff/health');if(a&&b) return; await new Promise(r=>setTimeout(r,1000));}process.exit(1)};f()\"",
    "dev:all": "concurrently -n back,web -c yellow,cyan \"npm:dev:backend\" \"npm:dev:web\"",
    "verify:quick": "npm run dev:all & npm run dev:wait && npm run test:api:backend && kill %1 || true",
    "dev:backend": "SKIP_BOOT_SIDE_EFFECTS=1 HOURLY_EXPORTS_ENABLED=false DISABLE_INVOICE_CLEANUP=1 tsx watch server/index.js",
    "dev:web": "next dev -p 3000",
    "start": "node dist/server/index.js",
    "start:backend": "npm run start",
    "db:migrate": "node scripts/migrate.cjs",
    "db:rollback": "node scripts/migrate.cjs rollback",
    "prestart:web": "npm run build:web",
    "start:web": "next start -p 3000",
    "lint": "eslint app src --max-warnings=0",
    "typecheck": "tsc -p tsconfig.server.json --noEmit",
    "test": "jest --runInBand",
    "test:smoke": "jest -c jest.backend.config.cjs --passWithNoTests --runTestsByPath tests/smoke.spec.ts tests/auth.smoke.spec.ts",
    "test:basic": "node test/test-basic.mjs",
    "test:prepush": "npm run typecheck",
    "test:prepush:smoke": "node scripts/prepush-smoke.mjs",
    "test:e2e": "playwright test",
    "test:smoke:curl": "./scripts/smoke-tests.sh",
    "test:comprehensive": "node test/test-comprehensive.mjs",
    "test:endpoints": "node test/test-endpoints.mjs",
    "test:webhook": "node test/test-webhook.mjs",
    "test:production": "node test/test-production-ready.mjs",
    "api:list": "node scripts/api-coverage/list-routes.cjs",
    "api:testlist": "node scripts/api-coverage/list-tested.cjs",
    "api:diff": "node scripts/api-coverage/diff.cjs",
    "api:coverage": "npm run build && npm run api:list && npm run api:testlist && npm run api:diff",
    "db:seed": "node scripts/seed-dev.cjs",
    "db:migrate:plans": "node scripts/db-migrate-plans.cjs",
    "db:migrate:kyc": "node scripts/db-migrate-kyc.cjs",
    "db:migrate:invoices": "node scripts/db-migrate-invoices.cjs",
    "invoices:backfill": "node scripts/backfill-invoices.cjs",
    "migrate:invoice-number": "node scripts/migrate-add-invoice-number.cjs",
    "db:seed:plans": "node scripts/db-seed-plans.cjs",
    "db:reset": "node scripts/db-reset.cjs && npm run db:init && npm run db:seed",
    "db:integrity": "node scripts/db-integrity.cjs",
    "db:rebuild": "node scripts/db-rebuild.cjs",
    "db:fts:purge": "node scripts/db-fts-purge.cjs",
    "dev:bypass:on": "cross-env DEV_MODE=1 node server.js",
    "smoke": "node scripts/smoke-e2e.mjs",
    "smoke:prod": "node scripts/smoke-production.mjs",
    "start:prod": "NODE_ENV=production node server.js",
    "build:prod": "NODE_ENV=production npm run build:backend",
    "deploy:check": "NODE_ENV=production npm run db:integrity && echo '✅ Database integrity check passed'",
    "deploy:full": "npm run build:prod && npm run db:init && npm run deploy:check && npm run start:prod",
    "repo:tidy": "bash scripts/repo-tidy.sh",
    "repo:tidy:dry": "bash scripts/repo-tidy.sh --dry-run"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "engines": {
    "node": ">=20.0.0",
    "npm": ">=10.0.0"
  },
  "dependencies": {
    "@hookform/resolvers": "5.2.2",
    "@next/mdx": "15.5.2",
    "@radix-ui/react-avatar": "1.1.10",
    "@radix-ui/react-dialog": "1.1.15",
    "@radix-ui/react-dropdown-menu": "2.1.16",
    "@radix-ui/react-slot": "1.2.3",
    "@radix-ui/react-tabs": "1.1.13",
    "@radix-ui/react-toast": "1.2.15",
    "@radix-ui/react-tooltip": "1.2.8",
    "@types/pg": "8.15.5",
    "archiver": "^7.0.1",
    "autoprefixer": "^10.4.20",
    "bcryptjs": "3.0.2",
    "better-sqlite3": "12.2.0",
    "class-variance-authority": "0.7.0",
    "clsx": "2.1.1",
    "compression": "1.8.1",
    "cookie-parser": "1.4.7",
    "cors": "2.8.5",
    "csurf": "1.11.0",
    "dayjs": "1.11.18",
    "dotenv": "17.2.2",
    "drizzle-kit": "0.31.4",
    "drizzle-orm": "0.44.5",
    "express": "5.1.0",
    "express-rate-limit": "8.1.0",
    "express-validator": "7.2.1",
    "fs-extra": "^11.3.1",
    "geist": "1.5.1",
    "gray-matter": "4.0.3",
    "helmet": "8.1.0",
    "joi": "^18.0.1",
    "jsonwebtoken": "9.0.2",
    "lucide-react": "0.453.0",
    "morgan": "1.10.1",
    "nanoid": "^5.1.5",
    "next": "14.2.32",
    "next-mdx-remote": "5.0.0",
    "node-fetch": "^3.3.2",
    "pdfkit": "0.17.2",
    "pg": "8.16.3",
    "postcss": "^8.4.47",
    "postmark": "4.0.5",
    "prom-client": "^15.1.3",
    "react": "18.2.0",
    "react-dom": "18.2.0",
    "react-hook-form": "7.62.0",
    "rehype-autolink-headings": "7.1.0",
    "rehype-slug": "6.0.0",
    "remark-gfm": "4.0.1",
    "swr": "2.3.6",
    "tailwind-merge": "2.5.2",
    "tailwindcss": "^3.4.10",
    "tailwindcss-animate": "1.0.7",
    "uuid": "^12.0.0",
    "winston": "3.17.0",
    "zod": "4.1.8"
  },
  "devDependencies": {
    "@playwright/test": "^1.47.2",
    "@types/better-sqlite3": "7.6.13",
    "@types/compression": "1.8.1",
    "@types/cookie-parser": "1.4.9",
    "@types/cors": "2.8.19",
    "@types/csurf": "1.11.5",
    "@types/express": "5.0.3",
    "@types/jest": "30.0.0",
    "@types/jsonwebtoken": "9.0.10",
    "@types/morgan": "1.9.10",
    "@types/node": "20.14.12",
    "@types/react": "18.3.3",
    "@types/react-dom": "18.3.0",
    "@types/supertest": "6.0.3",
    "concurrently": "9.2.1",
    "cross-env": "10.0.0",
    "eslint": "8.57.0",
    "eslint-config-next": "14.2.32",
    "jest": "30.1.3",
    "rimraf": "6.0.1",
    "supertest": "7.1.4",
    "ts-jest": "29.4.1",
    "tsx": "4.20.5",
    "typescript": "5.5.4",
    "wait-on": "8.0.5"
  },
  "overrides": {
    "@tailwindcss/postcss": "0.0.0-security",
    "@tailwindcss/node": "0.0.0-security",
    "react": "18.2.0",
    "react-dom": "18.2.0"
  }
}
