{
  "name": "vah-backend",
  "version": "1.0.0",
  "private": true,
  "description": "Virtual Address Hub Backend API (Express.js + PostgreSQL)",
  "scripts": {
    "//": "── DB lifecycle ───────────────────────────────────────────────",
    "migrate": "node scripts/migrate-pg.cjs",
    "migrate:soft-delete": "node scripts/apply-migration.js",
    "seed": "node scripts/seed-pg.cjs",
    "db:prepare": "npm run migrate && npm run migrate:soft-delete && npm run seed",
    "db:init": "node scripts/migrate-pg.cjs",
    "start:ci": "node server.js",
    "//2": "── Backend checks & tests ───────────────────────────────────────",
    "typecheck:backend": "tsc -p tsconfig.backend.json --noEmit",
    "test:backend": "npm run db:prepare && jest --config jest.backend.config.cjs",
    "//3": "── CI helpers ───────────────────────────────────────────────",
    "ci:prepare": "npm run db:prepare",
    "ci:build": "npm run db:prepare && npm run typecheck:backend",
    "ci:test": "npm run db:prepare && npm run typecheck:backend && jest --config jest.backend.config.cjs",
    "prebuild": "bash scripts/banlist.sh || true",
    "postinstall": "bash scripts/patch-native.sh",
    "clean": "rimraf dist",
    "build": "rm -rf dist && npx tsc -p tsconfig.server.json && node scripts/write-build-meta.cjs && node scripts/postbuild-shims.cjs && node scripts/verify-build.cjs",
    "build:backend": "npm run build",
    "prestart:backend": "node scripts/prestart.cjs",
    "predev": "echo 'PostgreSQL mode - ensure DATABASE_URL is set'",
    "dev:backend": "SKIP_BOOT_SIDE_EFFECTS=1 HOURLY_EXPORTS_ENABLED=false DISABLE_INVOICE_CLEANUP=1 tsx watch server/index.js",
    "start": "node dist/src/server.js",
    "start:backend": "npm run start",
    "dev:local": "NODE_ENV=development node dist/server/index.js",
    "start:local:ps": "node dist/server/index.js",
    "db:migrate": "node scripts/migrate-pg.cjs",
    "db:rollback": "node scripts/migrate-pg.cjs rollback",
    "typecheck": "tsc -p tsconfig.server.json --noEmit",
    "test": "jest --config jest.backend.config.cjs --runInBand",
    "test:e2e": "cross-env NODE_ENV=test TS_NODE_TRANSPILE_ONLY=1 jest --runInBand --config ./jest.e2e.config.js",
    "test:e2e:ci": "BASE_URL=$BASE_URL npm -w apps/backend run test:e2e",
    "postmark:upsert": "node scripts/postmark-upsert-webhook.mjs",
    "test:smoke": "jest -c jest.backend.config.cjs --passWithNoTests --runTestsByPath tests/smoke.spec.ts tests/auth.smoke.spec.ts",
    "test:basic": "node test/test-basic.mjs",
    "test:prepush": "npm run typecheck",
    "test:prepush:smoke": "node scripts/prepush-smoke.mjs",
    "test:smoke:curl": "./scripts/smoke-tests.sh",
    "test:comprehensive": "node test/test-comprehensive.mjs",
    "test:endpoints": "node test/test-endpoints.mjs",
    "test:webhook": "node test/test-webhook.mjs",
    "test:production": "node test/test-production-ready.mjs",
    "verify:cors": "bash scripts/verify-cors.sh",
    "lint:paths": "bash scripts/no-unnamed-catchall.sh",
    "api:list": "node scripts/api-coverage/list-routes.cjs",
    "api:testlist": "node scripts/api-coverage/list-tested.cjs",
    "api:diff": "node scripts/api-coverage/diff.cjs",
    "api:coverage": "npm run build && npm run api:list && npm run api:testlist && npm run api:diff",
    "routes:list": "node scripts/list-routes.cjs",
    "smoke:test": "node scripts/smoke-test.cjs",
    "db:seed": "node scripts/seed-dev.cjs",
    "db:migrate:plans": "node scripts/db-migrate-plans.cjs",
    "db:migrate:kyc": "node scripts/db-migrate-kyc.cjs",
    "db:migrate:invoices": "node scripts/db-migrate-invoices.cjs",
    "invoices:backfill": "node scripts/backfill-invoices.cjs",
    "migrate:invoice-number": "node scripts/migrate-add-invoice-number.cjs",
    "migrate:sql": "node ../../dist/src/scripts/migrate-sql.js ../../migrations",
    "db:seed:plans": "node scripts/db-seed-plans.cjs",
    "db:reset": "node scripts/db-reset.cjs && npm run db:init && npm run db:seed",
    "db:integrity": "node scripts/db-integrity.cjs",
    "db:rebuild": "node scripts/db-rebuild.cjs",
    "db:fts:purge": "node scripts/db-fts-purge.cjs",
    "dev:bypass:on": "cross-env DEV_MODE=1 node server.js",
    "smoke:e2e": "node scripts/smoke-e2e.mjs",
    "smoke:prod": "node scripts/smoke-production.mjs",
    "smoke": "bash scripts/smoke.sh",
    "_dev_local_note": "pragma: allowlist secret - test database URL for local development only",
    "start:prod": "NODE_ENV=production node server.js",
    "build:prod": "NODE_ENV=production npm run build:backend",
    "deploy:check": "NODE_ENV=production npm run db:integrity && echo '✅ Database integrity check passed'",
    "deploy:full": "npm run build:prod && npm run db:init && npm run deploy:check && npm run start:prod",
    "deploy:safe": "node ../../scripts/safe-migration.js migrate",
    "deploy:rollback": "node ../../scripts/safe-migration.js rollback",
    "deploy:status": "node ../../scripts/safe-migration.js status",
    "health:check": "node ../../scripts/health-check.js",
    "deploy:zero-downtime": "bash ../../scripts/deploy.sh deploy",
    "repo:tidy": "bash scripts/repo-tidy.sh",
    "repo:tidy:dry": "bash scripts/repo-tidy.sh --dry-run",
    "redoc:serve": "redoc-cli serve docs/openapi.yaml --watch --port 8088",
    "redoc:build": "redoc-cli build docs/openapi.yaml -o docs/public/api.html",
    "email:live": "ts-node --project tsconfig.server.json scripts/test-email-live.ts",
    "postmark:pull": "ts-node --project tsconfig.server.json scripts/postmark-pull.ts",
    "test:variables": "ts-node --project tsconfig.server.json scripts/test-template-variables.ts",
    "start:test": "PORT=3001 NODE_ENV=test node dist/server/index.js"
  },
  "keywords": [
    "backend",
    "api",
    "express",
    "postgresql",
    "virtual-address"
  ],
  "author": "Virtual Address Hub",
  "license": "ISC",
  "engines": {
    "node": ">=20.0.0",
    "npm": ">=10.0.0"
  },
  "dependencies": {
    "@vah/shared": "file:../../packages/shared",
    "@types/pg": "8.15.5",
    "archiver": "^7.0.1",
    "bcrypt": "6.0.0",
    "bcryptjs": "^3.0.2",
    "compression": "1.8.1",
    "connect-pg-simple": "10.0.0",
    "cookie-parser": "1.4.7",
    "cors": "2.8.5",
    "dayjs": "1.11.18",
    "drizzle-kit": "^0.18.1",
    "drizzle-orm": "0.44.5",
    "esbuild": "^0.25.10",
    "express": "5.1.0",
    "express-rate-limit": "8.1.0",
    "express-session": "1.18.2",
    "express-validator": "7.2.1",
    "fs-extra": "^11.3.1",
    "gray-matter": "^4.0.3",
    "helmet": "8.1.0",
    "joi": "^18.0.1",
    "js-yaml": "^4.1.0",
    "jsonwebtoken": "^9.0.2",
    "memorystore": "1.6.7",
    "morgan": "1.10.1",
    "nanoid": "^5.1.5",
    "node-fetch": "^3.3.2",
    "nodemailer": "7.0.9",
    "pdfkit": "0.17.2",
    "pg": "8.16.3",
    "postmark": "4.0.5",
    "prom-client": "^15.1.3",
    "uuid": "^12.0.0",
    "winston": "3.17.0",
    "zod": "^4.1.11"
  },
  "devDependencies": {
    "@types/bcrypt": "6.0.0",
    "@types/compression": "1.8.1",
    "@types/connect-pg-simple": "^7.0.3",
    "@types/cookie-parser": "1.4.9",
    "@types/cors": "2.8.19",
    "@types/express": "5.0.3",
    "@types/express-session": "^1.18.2",
    "@types/jest": "^30.0.0",
    "@types/jsonwebtoken": "9.0.10",
    "@types/morgan": "1.9.10",
    "@types/node": "20.14.12",
    "@types/supertest": "^6.0.3",
    "@types/swagger-jsdoc": "^6.0.4",
    "concurrently": "9.2.1",
    "cross-env": "^10.0.0",
    "dotenv": "^17.2.2",
    "jest": "^30.1.3",
    "rimraf": "6.0.1",
    "supertest": "^7.1.4",
    "swagger-jsdoc": "^6.2.8",
    "ts-jest": "^29.4.1",
    "ts-node": "^10.9.2",
    "tsx": "4.20.5",
    "typescript": "5.5.4",
    "wait-on": "8.0.5"
  },
  "overrides": {
    "redoc-cli/@babel/traverse": "^7.23.2",
    "redoc-cli/dompurify": "^3.2.4",
    "redoc-cli/elliptic": "^6.6.1",
    "redoc-cli/sha.js": "^2.4.12",
    "esbuild": "^0.25.0",
    "@esbuild-kit/core-utils/esbuild": "^0.25.0",
    "@esbuild-kit/esm-loader/esbuild": "^0.25.0"
  },
  "main": "add-email-toggles.js",
  "directories": {
    "doc": "docs",
    "example": "examples",
    "lib": "lib",
    "test": "tests"
  }
}
